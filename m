Return-Path: <iommu-bounces@lists.linux-foundation.org>
X-Original-To: lists.iommu@lfdr.de
Delivered-To: lists.iommu@lfdr.de
Received: from smtp4.osuosl.org (smtp4.osuosl.org [IPv6:2605:bc80:3010::137])
	by mail.lfdr.de (Postfix) with ESMTPS id 45843359195
	for <lists.iommu@lfdr.de>; Fri,  9 Apr 2021 03:43:05 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by smtp4.osuosl.org (Postfix) with ESMTP id 86672419EE;
	Fri,  9 Apr 2021 01:43:03 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from smtp4.osuosl.org ([127.0.0.1])
	by localhost (smtp4.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id cBHv29IPo6xB; Fri,  9 Apr 2021 01:43:02 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by smtp4.osuosl.org (Postfix) with ESMTP id CA739419BD;
	Fri,  9 Apr 2021 01:43:01 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id AAF3DC0011;
	Fri,  9 Apr 2021 01:43:01 +0000 (UTC)
X-Original-To: iommu@lists.linux-foundation.org
Delivered-To: iommu@lists.linuxfoundation.org
Received: from smtp3.osuosl.org (smtp3.osuosl.org [140.211.166.136])
 by lists.linuxfoundation.org (Postfix) with ESMTP id 609F4C000A
 for <iommu@lists.linux-foundation.org>; Fri,  9 Apr 2021 01:42:59 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by smtp3.osuosl.org (Postfix) with ESMTP id 3920160E22
 for <iommu@lists.linux-foundation.org>; Fri,  9 Apr 2021 01:42:59 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from smtp3.osuosl.org ([127.0.0.1])
 by localhost (smtp3.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id b0Q2MVzFxc38 for <iommu@lists.linux-foundation.org>;
 Fri,  9 Apr 2021 01:42:58 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.8.0
Received: from mga05.intel.com (mga05.intel.com [192.55.52.43])
 by smtp3.osuosl.org (Postfix) with ESMTPS id E36D6607DB
 for <iommu@lists.linux-foundation.org>; Fri,  9 Apr 2021 01:42:57 +0000 (UTC)
IronPort-SDR: J1A73RQAjmI5Mpmj4qdqveKR69srekbmyEpJYr8hSfsAAmN+fhpNzjyHE/PBsZSbsPNC0+utU2
 uHGBcEjjjEvA==
X-IronPort-AV: E=McAfee;i="6000,8403,9948"; a="278943668"
X-IronPort-AV: E=Sophos;i="5.82,208,1613462400"; d="scan'208";a="278943668"
Received: from orsmga001.jf.intel.com ([10.7.209.18])
 by fmsmga105.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 08 Apr 2021 18:42:57 -0700
IronPort-SDR: 3+z3CksxB4cyIymg39minkYhDkpjm61WBz4ZKbimYeM8gVxcggRBnYWK4+PdsDJepT64aVFpZl
 Y0QtnGgLYKkQ==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.82,208,1613462400"; d="scan'208";a="459050870"
Received: from otc-wp-03.jf.intel.com ([10.54.39.79])
 by orsmga001.jf.intel.com with ESMTP; 08 Apr 2021 18:42:56 -0700
From: Jacob Pan <jacob.jun.pan@linux.intel.com>
To: LKML <linux-kernel@vger.kernel.org>, iommu@lists.linux-foundation.org,
 Joerg Roedel <joro@8bytes.org>, "Lu Baolu" <baolu.lu@linux.intel.com>,
 Jean-Philippe Brucker <jean-philippe@linaro.com>
Subject: [PATCH 1/2] iommu/sva: Tighten SVA bind API with explicit flags
Date: Thu,  8 Apr 2021 10:08:55 -0700
Message-Id: <1617901736-24788-1-git-send-email-jacob.jun.pan@linux.intel.com>
X-Mailer: git-send-email 2.7.4
MIME-Version: 1.0
Cc: "Tian, Kevin" <kevin.tian@intel.com>, Dave Jiang <dave.jiang@intel.com>,
 Raj Ashok <ashok.raj@intel.com>, vkoul@kernel.org,
 Jason Gunthorpe <jgg@nvidia.com>, zhangfei.gao@linaro.org
X-BeenThere: iommu@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Development issues for Linux IOMMU support
 <iommu.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/iommu>,
 <mailto:iommu-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/iommu/>
List-Post: <mailto:iommu@lists.linux-foundation.org>
List-Help: <mailto:iommu-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/iommu>,
 <mailto:iommu-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: iommu-bounces@lists.linux-foundation.org
Sender: "iommu" <iommu-bounces@lists.linux-foundation.org>

VGhlIHZvaWQqIGRydmRhdGEgcGFyYW1ldGVyIGlzbid0IHJlYWxseSB1c2VkIGluwqBpb21tdV9z
dmFfYmluZF9kZXZpY2UoKQpBUEksIHRoZSBjdXJyZW50IElEWEQgY29kZSAiYm9ycm93cyIgdGhl
IGRydmRhdGEgZm9yIGEgVlQtZCBwcml2YXRlIGZsYWcKZm9yIHN1cGVydmlzb3IgU1ZBIHVzYWdl
LgoKU3VwZXJ2aXNvci9Qcml2aWxlZ2VkIG1vZGUgcmVxdWVzdCBpcyBhIGdlbmVyaWMgZmVhdHVy
ZS4gSXQgc2hvdWxkIGJlCnByb21vdGVkIGZyb20gdGhlIFZULWQgdmVuZG9yIGRyaXZlciB0byB0
aGUgZ2VuZXJpYyBjb2RlLgoKVGhpcyBwYXRjaCByZXBsYWNlcyB2b2lkKiBkcnZkYXRhIHdpdGgg
YSB1bnNpZ25lZCBpbnQgZmxhZ3MgcGFyYW1ldGVyCmFuZCBhZGp1c3RzIGNhbGxlcnMgYWNjb3Jk
aW5nbHkuCgpMaW5rOiBodHRwczovL2xvcmUua2VybmVsLm9yZy9saW51eC1pb21tdS9ZRmhpTUxS
MzVXV01XJTJGSHVAbXlyaWNhLwpTdWdnZXN0ZWQtYnk6IEplYW4tUGhpbGlwcGUgQnJ1Y2tlciA8
amVhbi1waGlsaXBwZUBsaW5hcm8ub3JnPgpTaWduZWQtb2ZmLWJ5OiBKYWNvYiBQYW4gPGphY29i
Lmp1bi5wYW5AbGludXguaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZG1hL2lkeGQvY2Rldi5jICAg
ICAgICAgICAgICAgICAgICAgICAgIHwgIDIgKy0KIGRyaXZlcnMvZG1hL2lkeGQvaW5pdC5jICAg
ICAgICAgICAgICAgICAgICAgICAgIHwgIDYgKysrLS0tCiBkcml2ZXJzL2lvbW11L2FybS9hcm0t
c21tdS12My9hcm0tc21tdS12My1zdmEuYyB8ICAyICstCiBkcml2ZXJzL2lvbW11L2FybS9hcm0t
c21tdS12My9hcm0tc21tdS12My5oICAgICB8ICA0ICsrLS0KIGRyaXZlcnMvaW9tbXUvaW50ZWwv
S2NvbmZpZyAgICAgICAgICAgICAgICAgICAgIHwgIDEgKwogZHJpdmVycy9pb21tdS9pbnRlbC9z
dm0uYyAgICAgICAgICAgICAgICAgICAgICAgfCAxOCArKysrKystLS0tLS0tLS0tLS0KIGRyaXZl
cnMvaW9tbXUvaW9tbXUuYyAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDkgKysrKysrLS0t
CiBkcml2ZXJzL21pc2MvdWFjY2UvdWFjY2UuYyAgICAgICAgICAgICAgICAgICAgICB8ICAyICst
CiBpbmNsdWRlL2xpbnV4L2ludGVsLWlvbW11LmggICAgICAgICAgICAgICAgICAgICB8ICAyICst
CiBpbmNsdWRlL2xpbnV4L2ludGVsLXN2bS5oICAgICAgICAgICAgICAgICAgICAgICB8IDE3ICsr
LS0tLS0tLS0tLS0tLS0tCiBpbmNsdWRlL2xpbnV4L2lvbW11LmggICAgICAgICAgICAgICAgICAg
ICAgICAgICB8IDE5ICsrKysrKysrKysrKysrKystLS0KIDExIGZpbGVzIGNoYW5nZWQsIDQwIGlu
c2VydGlvbnMoKyksIDQyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZG1hL2lk
eGQvY2Rldi5jIGIvZHJpdmVycy9kbWEvaWR4ZC9jZGV2LmMKaW5kZXggMGRiOWI4Mi4uMjFlYzgy
YiAxMDA2NDQKLS0tIGEvZHJpdmVycy9kbWEvaWR4ZC9jZGV2LmMKKysrIGIvZHJpdmVycy9kbWEv
aWR4ZC9jZGV2LmMKQEAgLTEwMyw3ICsxMDMsNyBAQCBzdGF0aWMgaW50IGlkeGRfY2Rldl9vcGVu
KHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBmaWxlICpmaWxwKQogCWZpbHAtPnByaXZhdGVf
ZGF0YSA9IGN0eDsKIAogCWlmIChkZXZpY2VfcGFzaWRfZW5hYmxlZChpZHhkKSkgewotCQlzdmEg
PSBpb21tdV9zdmFfYmluZF9kZXZpY2UoZGV2LCBjdXJyZW50LT5tbSwgTlVMTCk7CisJCXN2YSA9
IGlvbW11X3N2YV9iaW5kX2RldmljZShkZXYsIGN1cnJlbnQtPm1tLCAwKTsKIAkJaWYgKElTX0VS
UihzdmEpKSB7CiAJCQlyYyA9IFBUUl9FUlIoc3ZhKTsKIAkJCWRldl9lcnIoZGV2LCAicGFzaWQg
YWxsb2NhdGlvbiBmYWlsZWQ6ICVkXG4iLCByYyk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2RtYS9p
ZHhkL2luaXQuYyBiL2RyaXZlcnMvZG1hL2lkeGQvaW5pdC5jCmluZGV4IDA4NWEwYzMuLmNkYzg1
ZjEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZG1hL2lkeGQvaW5pdC5jCisrKyBiL2RyaXZlcnMvZG1h
L2lkeGQvaW5pdC5jCkBAIC0zMDAsMTMgKzMwMCwxMyBAQCBzdGF0aWMgc3RydWN0IGlkeGRfZGV2
aWNlICppZHhkX2FsbG9jKHN0cnVjdCBwY2lfZGV2ICpwZGV2KQogCiBzdGF0aWMgaW50IGlkeGRf
ZW5hYmxlX3N5c3RlbV9wYXNpZChzdHJ1Y3QgaWR4ZF9kZXZpY2UgKmlkeGQpCiB7Ci0JaW50IGZs
YWdzOworCXVuc2lnbmVkIGludCBmbGFnczsKIAl1bnNpZ25lZCBpbnQgcGFzaWQ7CiAJc3RydWN0
IGlvbW11X3N2YSAqc3ZhOwogCi0JZmxhZ3MgPSBTVk1fRkxBR19TVVBFUlZJU09SX01PREU7CisJ
ZmxhZ3MgPSBJT01NVV9TVkFfQklORF9TVVBFUlZJU09SOwogCi0Jc3ZhID0gaW9tbXVfc3ZhX2Jp
bmRfZGV2aWNlKCZpZHhkLT5wZGV2LT5kZXYsIE5VTEwsICZmbGFncyk7CisJc3ZhID0gaW9tbXVf
c3ZhX2JpbmRfZGV2aWNlKCZpZHhkLT5wZGV2LT5kZXYsIE5VTEwsIGZsYWdzKTsKIAlpZiAoSVNf
RVJSKHN2YSkpIHsKIAkJZGV2X3dhcm4oJmlkeGQtPnBkZXYtPmRldiwKIAkJCSAiaW9tbXUgc3Zh
IGJpbmQgZmFpbGVkOiAlbGRcbiIsIFBUUl9FUlIoc3ZhKSk7CmRpZmYgLS1naXQgYS9kcml2ZXJz
L2lvbW11L2FybS9hcm0tc21tdS12My9hcm0tc21tdS12My1zdmEuYyBiL2RyaXZlcnMvaW9tbXUv
YXJtL2FybS1zbW11LXYzL2FybS1zbW11LXYzLXN2YS5jCmluZGV4IGJiMjUxY2EuLjIzZTI4N2Ug
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvaW9tbXUvYXJtL2FybS1zbW11LXYzL2FybS1zbW11LXYzLXN2
YS5jCisrKyBiL2RyaXZlcnMvaW9tbXUvYXJtL2FybS1zbW11LXYzL2FybS1zbW11LXYzLXN2YS5j
CkBAIC0zNTQsNyArMzU0LDcgQEAgX19hcm1fc21tdV9zdmFfYmluZChzdHJ1Y3QgZGV2aWNlICpk
ZXYsIHN0cnVjdCBtbV9zdHJ1Y3QgKm1tKQogfQogCiBzdHJ1Y3QgaW9tbXVfc3ZhICoKLWFybV9z
bW11X3N2YV9iaW5kKHN0cnVjdCBkZXZpY2UgKmRldiwgc3RydWN0IG1tX3N0cnVjdCAqbW0sIHZv
aWQgKmRydmRhdGEpCithcm1fc21tdV9zdmFfYmluZChzdHJ1Y3QgZGV2aWNlICpkZXYsIHN0cnVj
dCBtbV9zdHJ1Y3QgKm1tLCB1bnNpZ25lZCBpbnQgZmxhZ3MpCiB7CiAJc3RydWN0IGlvbW11X3N2
YSAqaGFuZGxlOwogCXN0cnVjdCBpb21tdV9kb21haW4gKmRvbWFpbiA9IGlvbW11X2dldF9kb21h
aW5fZm9yX2RldihkZXYpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9pb21tdS9hcm0vYXJtLXNtbXUt
djMvYXJtLXNtbXUtdjMuaCBiL2RyaXZlcnMvaW9tbXUvYXJtL2FybS1zbW11LXYzL2FybS1zbW11
LXYzLmgKaW5kZXggZjk4NTgxNy4uYjk3MWQ0ZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9pb21tdS9h
cm0vYXJtLXNtbXUtdjMvYXJtLXNtbXUtdjMuaAorKysgYi9kcml2ZXJzL2lvbW11L2FybS9hcm0t
c21tdS12My9hcm0tc21tdS12My5oCkBAIC03MTEsNyArNzExLDcgQEAgYm9vbCBhcm1fc21tdV9t
YXN0ZXJfc3ZhX2VuYWJsZWQoc3RydWN0IGFybV9zbW11X21hc3RlciAqbWFzdGVyKTsKIGludCBh
cm1fc21tdV9tYXN0ZXJfZW5hYmxlX3N2YShzdHJ1Y3QgYXJtX3NtbXVfbWFzdGVyICptYXN0ZXIp
OwogaW50IGFybV9zbW11X21hc3Rlcl9kaXNhYmxlX3N2YShzdHJ1Y3QgYXJtX3NtbXVfbWFzdGVy
ICptYXN0ZXIpOwogc3RydWN0IGlvbW11X3N2YSAqYXJtX3NtbXVfc3ZhX2JpbmQoc3RydWN0IGRl
dmljZSAqZGV2LCBzdHJ1Y3QgbW1fc3RydWN0ICptbSwKLQkJCQkgICAgdm9pZCAqZHJ2ZGF0YSk7
CisJCQkJICAgIHVuc2lnbmVkIGludCBmbGFncyk7CiB2b2lkIGFybV9zbW11X3N2YV91bmJpbmQo
c3RydWN0IGlvbW11X3N2YSAqaGFuZGxlKTsKIHUzMiBhcm1fc21tdV9zdmFfZ2V0X3Bhc2lkKHN0
cnVjdCBpb21tdV9zdmEgKmhhbmRsZSk7CiB2b2lkIGFybV9zbW11X3N2YV9ub3RpZmllcl9zeW5j
aHJvbml6ZSh2b2lkKTsKQEAgLTc0Miw3ICs3NDIsNyBAQCBzdGF0aWMgaW5saW5lIGludCBhcm1f
c21tdV9tYXN0ZXJfZGlzYWJsZV9zdmEoc3RydWN0IGFybV9zbW11X21hc3RlciAqbWFzdGVyKQog
fQogCiBzdGF0aWMgaW5saW5lIHN0cnVjdCBpb21tdV9zdmEgKgotYXJtX3NtbXVfc3ZhX2JpbmQo
c3RydWN0IGRldmljZSAqZGV2LCBzdHJ1Y3QgbW1fc3RydWN0ICptbSwgdm9pZCAqZHJ2ZGF0YSkK
K2FybV9zbW11X3N2YV9iaW5kKHN0cnVjdCBkZXZpY2UgKmRldiwgc3RydWN0IG1tX3N0cnVjdCAq
bW0sIHVuc2lnbmVkIGludCBmbGFncykKIHsKIAlyZXR1cm4gRVJSX1BUUigtRU5PREVWKTsKIH0K
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvaW9tbXUvaW50ZWwvS2NvbmZpZyBiL2RyaXZlcnMvaW9tbXUv
aW50ZWwvS2NvbmZpZwppbmRleCAyOGEzZDE1Li41NDE1MDUyIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2lvbW11L2ludGVsL0tjb25maWcKKysrIGIvZHJpdmVycy9pb21tdS9pbnRlbC9LY29uZmlnCkBA
IC00MSw2ICs0MSw3IEBAIGNvbmZpZyBJTlRFTF9JT01NVV9TVk0KIAlzZWxlY3QgUENJX1BSSQog
CXNlbGVjdCBNTVVfTk9USUZJRVIKIAlzZWxlY3QgSU9BU0lECisJc2VsZWN0IElPTU1VX1NWQV9M
SUIKIAloZWxwCiAJICBTaGFyZWQgVmlydHVhbCBNZW1vcnkgKFNWTSkgcHJvdmlkZXMgYSBmYWNp
bGl0eSBmb3IgZGV2aWNlcwogCSAgdG8gYWNjZXNzIERNQSByZXNvdXJjZXMgdGhyb3VnaCBwcm9j
ZXNzIGFkZHJlc3Mgc3BhY2UgYnkKZGlmZiAtLWdpdCBhL2RyaXZlcnMvaW9tbXUvaW50ZWwvc3Zt
LmMgYi9kcml2ZXJzL2lvbW11L2ludGVsL3N2bS5jCmluZGV4IDU3NGE3ZTYuLjRiNWY4YjAgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvaW9tbXUvaW50ZWwvc3ZtLmMKKysrIGIvZHJpdmVycy9pb21tdS9p
bnRlbC9zdm0uYwpAQCAtNDg2LDEyICs0ODYsOSBAQCBpbnRlbF9zdm1fYmluZF9tbShzdHJ1Y3Qg
ZGV2aWNlICpkZXYsIHVuc2lnbmVkIGludCBmbGFncywKIAl9IGVsc2UKIAkJcGFzaWRfbWF4ID0g
MSA8PCAyMDsKIAotCS8qIEJpbmQgc3VwZXJ2aXNvciBQQVNJRCBzaHVsZCBoYXZlIG1tID0gTlVM
TCAqLwotCWlmIChmbGFncyAmIFNWTV9GTEFHX1NVUEVSVklTT1JfTU9ERSkgewotCQlpZiAoIWVj
YXBfc3JzKGlvbW11LT5lY2FwKSB8fCBtbSkgewotCQkJcHJfZXJyKCJTdXBlcnZpc29yIFBBU0lE
IHdpdGggdXNlciBwcm92aWRlZCBtbS5cbiIpOwotCQkJcmV0dXJuIC1FSU5WQUw7Ci0JCX0KKwlp
ZiAoKGZsYWdzICYgSU9NTVVfU1ZBX0JJTkRfU1VQRVJWSVNPUikgJiYgIWVjYXBfc3JzKGlvbW11
LT5lY2FwKSkgeworCQlwcl9lcnIoIlN1cGVydmlzb3IgUEFTSUQgbm90IHN1cHBvcnRlZC5cbiIp
OworCQlyZXR1cm4gLUVJTlZBTDsKIAl9CiAKIAlpZiAoIShmbGFncyAmIFNWTV9GTEFHX1BSSVZB
VEVfUEFTSUQpKSB7CkBAIC01OTMsNyArNTkwLDcgQEAgaW50ZWxfc3ZtX2JpbmRfbW0oc3RydWN0
IGRldmljZSAqZGV2LCB1bnNpZ25lZCBpbnQgZmxhZ3MsCiAJCXJldCA9IGludGVsX3Bhc2lkX3Nl
dHVwX2ZpcnN0X2xldmVsKGlvbW11LCBkZXYsCiAJCQkJbW0gPyBtbS0+cGdkIDogaW5pdF9tbS5w
Z2QsCiAJCQkJc3ZtLT5wYXNpZCwgRkxQVF9ERUZBVUxUX0RJRCwKLQkJCQkobW0gPyAwIDogUEFT
SURfRkxBR19TVVBFUlZJU09SX01PREUpIHwKKwkJCQkobW0gPyAwIDogSU9NTVVfU1ZBX0JJTkRf
U1VQRVJWSVNPUikgfAogCQkJCShjcHVfZmVhdHVyZV9lbmFibGVkKFg4Nl9GRUFUVVJFX0xBNTcp
ID8KIAkJCQkgUEFTSURfRkxBR19GTDVMUCA6IDApKTsKIAkJc3Bpbl91bmxvY2tfaXJxcmVzdG9y
ZSgmaW9tbXUtPmxvY2ssIGlmbGFncyk7CkBAIC02MjAsNyArNjE3LDcgQEAgaW50ZWxfc3ZtX2Jp
bmRfbW0oc3RydWN0IGRldmljZSAqZGV2LCB1bnNpZ25lZCBpbnQgZmxhZ3MsCiAJCXJldCA9IGlu
dGVsX3Bhc2lkX3NldHVwX2ZpcnN0X2xldmVsKGlvbW11LCBkZXYsCiAJCQkJCQltbSA/IG1tLT5w
Z2QgOiBpbml0X21tLnBnZCwKIAkJCQkJCXN2bS0+cGFzaWQsIEZMUFRfREVGQVVMVF9ESUQsCi0J
CQkJCQkobW0gPyAwIDogUEFTSURfRkxBR19TVVBFUlZJU09SX01PREUpIHwKKwkJCQkJCShtbSA/
IDAgOiBJT01NVV9TVkFfQklORF9TVVBFUlZJU09SKSB8CiAJCQkJCQkoY3B1X2ZlYXR1cmVfZW5h
YmxlZChYODZfRkVBVFVSRV9MQTU3KSA/CiAJCQkJCQlQQVNJRF9GTEFHX0ZMNUxQIDogMCkpOwog
CQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZpb21tdS0+bG9jaywgaWZsYWdzKTsKQEAgLTEwNTks
MTEgKzEwNTYsMTAgQEAgc3RhdGljIGlycXJldHVybl90IHBycV9ldmVudF90aHJlYWQoaW50IGly
cSwgdm9pZCAqZCkKIAogI2RlZmluZSB0b19pbnRlbF9zdm1fZGV2KGhhbmRsZSkgY29udGFpbmVy
X29mKGhhbmRsZSwgc3RydWN0IGludGVsX3N2bV9kZXYsIHN2YSkKIHN0cnVjdCBpb21tdV9zdmEg
KgotaW50ZWxfc3ZtX2JpbmQoc3RydWN0IGRldmljZSAqZGV2LCBzdHJ1Y3QgbW1fc3RydWN0ICpt
bSwgdm9pZCAqZHJ2ZGF0YSkKK2ludGVsX3N2bV9iaW5kKHN0cnVjdCBkZXZpY2UgKmRldiwgc3Ry
dWN0IG1tX3N0cnVjdCAqbW0sIHVuc2lnbmVkIGludCBmbGFncykKIHsKIAlzdHJ1Y3QgaW9tbXVf
c3ZhICpzdmEgPSBFUlJfUFRSKC1FSU5WQUwpOwogCXN0cnVjdCBpbnRlbF9zdm1fZGV2ICpzZGV2
ID0gTlVMTDsKLQl1bnNpZ25lZCBpbnQgZmxhZ3MgPSAwOwogCWludCByZXQ7CiAKIAkvKgpAQCAt
MTA3MSw4ICsxMDY3LDYgQEAgaW50ZWxfc3ZtX2JpbmQoc3RydWN0IGRldmljZSAqZGV2LCBzdHJ1
Y3QgbW1fc3RydWN0ICptbSwgdm9pZCAqZHJ2ZGF0YSkKIAkgKiBJdCB3aWxsIHJlcXVpcmUgc2hh
cmVkIFNWTSBkYXRhIHN0cnVjdHVyZXMsIGkuZS4gY29tYmluZSBpb19tbQogCSAqIGFuZCBpbnRl
bF9zdm0gZXRjLgogCSAqLwotCWlmIChkcnZkYXRhKQotCQlmbGFncyA9ICoodW5zaWduZWQgaW50
ICopZHJ2ZGF0YTsKIAltdXRleF9sb2NrKCZwYXNpZF9tdXRleCk7CiAJcmV0ID0gaW50ZWxfc3Zt
X2JpbmRfbW0oZGV2LCBmbGFncywgTlVMTCwgbW0sICZzZGV2KTsKIAlpZiAocmV0KQpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9pb21tdS9pb21tdS5jIGIvZHJpdmVycy9pb21tdS9pb21tdS5jCmluZGV4
IGQwYjBhMTUuLmJmMGEyMGYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvaW9tbXUvaW9tbXUuYworKysg
Yi9kcml2ZXJzL2lvbW11L2lvbW11LmMKQEAgLTI5NjIsNiArMjk2Miw3IEBAIEVYUE9SVF9TWU1C
T0xfR1BMKGlvbW11X2F1eF9nZXRfcGFzaWQpOwogICogaW9tbXVfc3ZhX2JpbmRfZGV2aWNlKCkg
LSBCaW5kIGEgcHJvY2VzcyBhZGRyZXNzIHNwYWNlIHRvIGEgZGV2aWNlCiAgKiBAZGV2OiB0aGUg
ZGV2aWNlCiAgKiBAbW06IHRoZSBtbSB0byBiaW5kLCBjYWxsZXIgbXVzdCBob2xkIGEgcmVmZXJl
bmNlIHRvIGl0CisgKiBAZmxhZ3M6IG9wdGlvbnMgZm9yIHRoZSBiaW5kIG9wZXJhdGlvbgogICoK
ICAqIENyZWF0ZSBhIGJvbmQgYmV0d2VlbiBkZXZpY2UgYW5kIGFkZHJlc3Mgc3BhY2UsIGFsbG93
aW5nIHRoZSBkZXZpY2UgdG8gYWNjZXNzCiAgKiB0aGUgbW0gdXNpbmcgdGhlIHJldHVybmVkIFBB
U0lELiBJZiBhIGJvbmQgYWxyZWFkeSBleGlzdHMgYmV0d2VlbiBAZGV2aWNlIGFuZApAQCAtMjk3
NCw3ICsyOTc1LDcgQEAgRVhQT1JUX1NZTUJPTF9HUEwoaW9tbXVfYXV4X2dldF9wYXNpZCk7CiAg
KiBPbiBlcnJvciwgcmV0dXJucyBhbiBFUlJfUFRSIHZhbHVlLgogICovCiBzdHJ1Y3QgaW9tbXVf
c3ZhICoKLWlvbW11X3N2YV9iaW5kX2RldmljZShzdHJ1Y3QgZGV2aWNlICpkZXYsIHN0cnVjdCBt
bV9zdHJ1Y3QgKm1tLCB2b2lkICpkcnZkYXRhKQoraW9tbXVfc3ZhX2JpbmRfZGV2aWNlKHN0cnVj
dCBkZXZpY2UgKmRldiwgc3RydWN0IG1tX3N0cnVjdCAqbW0sIHVuc2lnbmVkIGludCBmbGFncykK
IHsKIAlzdHJ1Y3QgaW9tbXVfZ3JvdXAgKmdyb3VwOwogCXN0cnVjdCBpb21tdV9zdmEgKmhhbmRs
ZSA9IEVSUl9QVFIoLUVJTlZBTCk7CkBAIC0yOTg3LDYgKzI5ODgsOSBAQCBpb21tdV9zdmFfYmlu
ZF9kZXZpY2Uoc3RydWN0IGRldmljZSAqZGV2LCBzdHJ1Y3QgbW1fc3RydWN0ICptbSwgdm9pZCAq
ZHJ2ZGF0YSkKIAlpZiAoIWdyb3VwKQogCQlyZXR1cm4gRVJSX1BUUigtRU5PREVWKTsKIAorCS8q
IFN1cGVydmlzb3IgU1ZBIGRvZXMgbm90IG5lZWQgdGhlIGN1cnJlbnQgbW0gKi8KKwlpZiAoKGZs
YWdzICYgSU9NTVVfU1ZBX0JJTkRfU1VQRVJWSVNPUikgJiYgbW0pCisJCXJldHVybiBFUlJfUFRS
KC1FSU5WQUwpOwogCS8qIEVuc3VyZSBkZXZpY2UgY291bnQgYW5kIGRvbWFpbiBkb24ndCBjaGFu
Z2Ugd2hpbGUgd2UncmUgYmluZGluZyAqLwogCW11dGV4X2xvY2soJmdyb3VwLT5tdXRleCk7CiAK
QEAgLTI5OTksOCArMzAwMyw3IEBAIGlvbW11X3N2YV9iaW5kX2RldmljZShzdHJ1Y3QgZGV2aWNl
ICpkZXYsIHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCB2b2lkICpkcnZkYXRhKQogCWlmIChpb21tdV9n
cm91cF9kZXZpY2VfY291bnQoZ3JvdXApICE9IDEpCiAJCWdvdG8gb3V0X3VubG9jazsKIAotCWhh
bmRsZSA9IG9wcy0+c3ZhX2JpbmQoZGV2LCBtbSwgZHJ2ZGF0YSk7Ci0KKwloYW5kbGUgPSBvcHMt
PnN2YV9iaW5kKGRldiwgbW0sIGZsYWdzKTsKIG91dF91bmxvY2s6CiAJbXV0ZXhfdW5sb2NrKCZn
cm91cC0+bXV0ZXgpOwogCWlvbW11X2dyb3VwX3B1dChncm91cCk7CmRpZmYgLS1naXQgYS9kcml2
ZXJzL21pc2MvdWFjY2UvdWFjY2UuYyBiL2RyaXZlcnMvbWlzYy91YWNjZS91YWNjZS5jCmluZGV4
IGQwN2FmNGUuLjI3ZTBlMDQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbWlzYy91YWNjZS91YWNjZS5j
CisrKyBiL2RyaXZlcnMvbWlzYy91YWNjZS91YWNjZS5jCkBAIC05OSw3ICs5OSw3IEBAIHN0YXRp
YyBpbnQgdWFjY2VfYmluZF9xdWV1ZShzdHJ1Y3QgdWFjY2VfZGV2aWNlICp1YWNjZSwgc3RydWN0
IHVhY2NlX3F1ZXVlICpxKQogCWlmICghKHVhY2NlLT5mbGFncyAmIFVBQ0NFX0RFVl9TVkEpKQog
CQlyZXR1cm4gMDsKIAotCWhhbmRsZSA9IGlvbW11X3N2YV9iaW5kX2RldmljZSh1YWNjZS0+cGFy
ZW50LCBjdXJyZW50LT5tbSwgTlVMTCk7CisJaGFuZGxlID0gaW9tbXVfc3ZhX2JpbmRfZGV2aWNl
KHVhY2NlLT5wYXJlbnQsIGN1cnJlbnQtPm1tLCAwKTsKIAlpZiAoSVNfRVJSKGhhbmRsZSkpCiAJ
CXJldHVybiBQVFJfRVJSKGhhbmRsZSk7CiAKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvaW50
ZWwtaW9tbXUuaCBiL2luY2x1ZGUvbGludXgvaW50ZWwtaW9tbXUuaAppbmRleCAxYmM0NmI4Li5j
ZGZmNzUyIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L2ludGVsLWlvbW11LmgKKysrIGIvaW5j
bHVkZS9saW51eC9pbnRlbC1pb21tdS5oCkBAIC03NTcsNyArNzU3LDcgQEAgaW50IGludGVsX3N2
bV9iaW5kX2dwYXNpZChzdHJ1Y3QgaW9tbXVfZG9tYWluICpkb21haW4sIHN0cnVjdCBkZXZpY2Ug
KmRldiwKIAkJCSAgc3RydWN0IGlvbW11X2dwYXNpZF9iaW5kX2RhdGEgKmRhdGEpOwogaW50IGlu
dGVsX3N2bV91bmJpbmRfZ3Bhc2lkKHN0cnVjdCBkZXZpY2UgKmRldiwgdTMyIHBhc2lkKTsKIHN0
cnVjdCBpb21tdV9zdmEgKmludGVsX3N2bV9iaW5kKHN0cnVjdCBkZXZpY2UgKmRldiwgc3RydWN0
IG1tX3N0cnVjdCAqbW0sCi0JCQkJIHZvaWQgKmRydmRhdGEpOworCQkJCSB1bnNpZ25lZCBpbnQg
ZmxhZ3MpOwogdm9pZCBpbnRlbF9zdm1fdW5iaW5kKHN0cnVjdCBpb21tdV9zdmEgKmhhbmRsZSk7
CiB1MzIgaW50ZWxfc3ZtX2dldF9wYXNpZChzdHJ1Y3QgaW9tbXVfc3ZhICpoYW5kbGUpOwogaW50
IGludGVsX3N2bV9wYWdlX3Jlc3BvbnNlKHN0cnVjdCBkZXZpY2UgKmRldiwgc3RydWN0IGlvbW11
X2ZhdWx0X2V2ZW50ICpldnQsCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L2ludGVsLXN2bS5o
IGIvaW5jbHVkZS9saW51eC9pbnRlbC1zdm0uaAppbmRleCAzOWQzNjhhLi5lZjZiNzUzIDEwMDY0
NAotLS0gYS9pbmNsdWRlL2xpbnV4L2ludGVsLXN2bS5oCisrKyBiL2luY2x1ZGUvbGludXgvaW50
ZWwtc3ZtLmgKQEAgLTMwLDMwICszMCwxNyBAQCBzdHJ1Y3Qgc3ZtX2Rldl9vcHMgewogICogaWYg
dGhlcmUgaXMgbm8gb3RoZXIgd2F5IHRvIGRvIHNvLiBJdCBzaG91bGQgYmUgdXNlZCBzcGFyaW5n
bHksIGlmIGF0IGFsbC4KICAqLwogI2RlZmluZSBTVk1fRkxBR19QUklWQVRFX1BBU0lECQkoMTw8
MCkKLQotLyoKLSAqIFRoZSBTVk1fRkxBR19TVVBFUlZJU09SX01PREUgZmxhZyByZXF1ZXN0cyBh
IFBBU0lEIHdoaWNoIGNhbiBiZSB1c2VkIG9ubHkKLSAqIGZvciBhY2Nlc3MgdG8ga2VybmVsIGFk
ZHJlc3Nlcy4gTm8gSU9UTEIgZmx1c2hlcyBhcmUgYXV0b21hdGljYWxseSBkb25lCi0gKiBmb3Ig
a2VybmVsIG1hcHBpbmdzOyBpdCBpcyB2YWxpZCBvbmx5IGZvciBhY2Nlc3MgdG8gdGhlIGtlcm5l
bCdzIHN0YXRpYwotICogMToxIG1hcHBpbmcgb2YgcGh5c2ljYWwgbWVtb3J5IOKAlCBub3QgdG8g
dm1hbGxvYyBvciBldmVuIG1vZHVsZSBtYXBwaW5ncy4KLSAqIEEgZnV0dXJlIEFQSSBhZGRpdGlv
biBtYXkgcGVybWl0IHRoZSB1c2Ugb2Ygc3VjaCByYW5nZXMsIGJ5IG1lYW5zIG9mIGFuCi0gKiBl
eHBsaWNpdCBJT1RMQiBmbHVzaCBjYWxsIChha2luIHRvIHRoZSBETUEgQVBJJ3MgdW5tYXAgbWV0
aG9kKS4KLSAqCi0gKiBJdCBpcyB1bmxpa2VseSB0aGF0IHdlIHdpbGwgZXZlciBob29rIGludG8g
Zmx1c2hfdGxiX2tlcm5lbF9yYW5nZSgpIHRvCi0gKiBkbyBzdWNoIElPVExCIGZsdXNoZXMgYXV0
b21hdGljYWxseS4KLSAqLwotI2RlZmluZSBTVk1fRkxBR19TVVBFUlZJU09SX01PREUJKDE8PDEp
CiAvKgogICogVGhlIFNWTV9GTEFHX0dVRVNUX01PREUgZmxhZyBpcyB1c2VkIHdoZW4gYSBQQVNJ
RCBiaW5kIGlzIGZvciBndWVzdAogICogcHJvY2Vzc2VzLiBDb21wYXJlZCB0byB0aGUgaG9zdCBi
aW5kLCB0aGUgcHJpbWFyeSBkaWZmZXJlbmNlcyBhcmU6CiAgKiAxLiBtbSBsaWZlIGN5Y2xlIG1h
bmFnZW1lbnQKICAqIDIuIGZhdWx0IHJlcG9ydGluZwogICovCi0jZGVmaW5lIFNWTV9GTEFHX0dV
RVNUX01PREUJCSgxPDwyKQorI2RlZmluZSBTVk1fRkxBR19HVUVTVF9NT0RFCQkoMTw8MSkKIC8q
CiAgKiBUaGUgU1ZNX0ZMQUdfR1VFU1RfUEFTSUQgZmxhZyBpcyB1c2VkIHdoZW4gYSBndWVzdCBo
YXMgaXRzIG93biBQQVNJRCBzcGFjZSwKICAqIHdoaWNoIHJlcXVpcmVzIGd1ZXN0IGFuZCBob3N0
IFBBU0lEIHRyYW5zbGF0aW9uIGF0IGJvdGggZGlyZWN0aW9ucy4KICAqLwotI2RlZmluZSBTVk1f
RkxBR19HVUVTVF9QQVNJRAkJKDE8PDMpCisjZGVmaW5lIFNWTV9GTEFHX0dVRVNUX1BBU0lECQko
MTw8MikKIAogI2VuZGlmIC8qIF9fSU5URUxfU1ZNX0hfXyAqLwpkaWZmIC0tZ2l0IGEvaW5jbHVk
ZS9saW51eC9pb21tdS5oIGIvaW5jbHVkZS9saW51eC9pb21tdS5oCmluZGV4IDVlN2ZlNTEuLmEz
ZmJhYTIgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvaW9tbXUuaAorKysgYi9pbmNsdWRlL2xp
bnV4L2lvbW11LmgKQEAgLTE2Niw2ICsxNjYsMTkgQEAgZW51bSBpb21tdV9kZXZfZmVhdHVyZXMg
ewogCiAjaWZkZWYgQ09ORklHX0lPTU1VX0FQSQogCisvKgorICogVGhlIElPTU1VX1NWQV9CSU5E
X1NVUEVSVklTT1IgZmxhZyByZXF1ZXN0cyBhIFBBU0lEIHdoaWNoIGNhbiBiZSB1c2VkIG9ubHkK
KyAqIGZvciBhY2Nlc3MgdG8ga2VybmVsIGFkZHJlc3Nlcy4gTm8gSU9UTEIgZmx1c2hlcyBhcmUg
YXV0b21hdGljYWxseSBkb25lCisgKiBmb3Iga2VybmVsIG1hcHBpbmdzOyBpdCBpcyB2YWxpZCBv
bmx5IGZvciBhY2Nlc3MgdG8gdGhlIGtlcm5lbCdzIHN0YXRpYworICogMToxIG1hcHBpbmcgb2Yg
cGh5c2ljYWwgbWVtb3J5IOKAlCBub3QgdG8gdm1hbGxvYyBvciBldmVuIG1vZHVsZSBtYXBwaW5n
cy4KKyAqIEEgZnV0dXJlIEFQSSBhZGRpdGlvbiBtYXkgcGVybWl0IHRoZSB1c2Ugb2Ygc3VjaCBy
YW5nZXMsIGJ5IG1lYW5zIG9mIGFuCisgKiBleHBsaWNpdCBJT1RMQiBmbHVzaCBjYWxsIChha2lu
IHRvIHRoZSBETUEgQVBJJ3MgdW5tYXAgbWV0aG9kKS4KKyAqCisgKiBJdCBpcyB1bmxpa2VseSB0
aGF0IHdlIHdpbGwgZXZlciBob29rIGludG8gZmx1c2hfdGxiX2tlcm5lbF9yYW5nZSgpIHRvCisg
KiBkbyBzdWNoIElPVExCIGZsdXNoZXMgYXV0b21hdGljYWxseS4KKyAqLworI2RlZmluZSBJT01N
VV9TVkFfQklORF9TVVBFUlZJU09SICAgICAgIEJJVCgwKQorCiAvKioKICAqIHN0cnVjdCBpb21t
dV9pb3RsYl9nYXRoZXIgLSBSYW5nZSBpbmZvcm1hdGlvbiBmb3IgYSBwZW5kaW5nIElPVExCIGZs
dXNoCiAgKgpAQCAtMjg3LDcgKzMwMCw3IEBAIHN0cnVjdCBpb21tdV9vcHMgewogCWludCAoKmF1
eF9nZXRfcGFzaWQpKHN0cnVjdCBpb21tdV9kb21haW4gKmRvbWFpbiwgc3RydWN0IGRldmljZSAq
ZGV2KTsKIAogCXN0cnVjdCBpb21tdV9zdmEgKigqc3ZhX2JpbmQpKHN0cnVjdCBkZXZpY2UgKmRl
diwgc3RydWN0IG1tX3N0cnVjdCAqbW0sCi0JCQkJICAgICAgdm9pZCAqZHJ2ZGF0YSk7CisJCQkJ
ICAgICAgdW5zaWduZWQgaW50IGZsYWdzKTsKIAl2b2lkICgqc3ZhX3VuYmluZCkoc3RydWN0IGlv
bW11X3N2YSAqaGFuZGxlKTsKIAl1MzIgKCpzdmFfZ2V0X3Bhc2lkKShzdHJ1Y3QgaW9tbXVfc3Zh
ICpoYW5kbGUpOwogCkBAIC02NDAsNyArNjUzLDcgQEAgaW50IGlvbW11X2F1eF9nZXRfcGFzaWQo
c3RydWN0IGlvbW11X2RvbWFpbiAqZG9tYWluLCBzdHJ1Y3QgZGV2aWNlICpkZXYpOwogCiBzdHJ1
Y3QgaW9tbXVfc3ZhICppb21tdV9zdmFfYmluZF9kZXZpY2Uoc3RydWN0IGRldmljZSAqZGV2LAog
CQkJCQlzdHJ1Y3QgbW1fc3RydWN0ICptbSwKLQkJCQkJdm9pZCAqZHJ2ZGF0YSk7CisJCQkJCXVu
c2lnbmVkIGludCBmbGFncyk7CiB2b2lkIGlvbW11X3N2YV91bmJpbmRfZGV2aWNlKHN0cnVjdCBp
b21tdV9zdmEgKmhhbmRsZSk7CiB1MzIgaW9tbXVfc3ZhX2dldF9wYXNpZChzdHJ1Y3QgaW9tbXVf
c3ZhICpoYW5kbGUpOwogCkBAIC0xMDE1LDcgKzEwMjgsNyBAQCBpb21tdV9hdXhfZ2V0X3Bhc2lk
KHN0cnVjdCBpb21tdV9kb21haW4gKmRvbWFpbiwgc3RydWN0IGRldmljZSAqZGV2KQogfQogCiBz
dGF0aWMgaW5saW5lIHN0cnVjdCBpb21tdV9zdmEgKgotaW9tbXVfc3ZhX2JpbmRfZGV2aWNlKHN0
cnVjdCBkZXZpY2UgKmRldiwgc3RydWN0IG1tX3N0cnVjdCAqbW0sIHZvaWQgKmRydmRhdGEpCitp
b21tdV9zdmFfYmluZF9kZXZpY2Uoc3RydWN0IGRldmljZSAqZGV2LCBzdHJ1Y3QgbW1fc3RydWN0
ICptbSwgdW5zaWduZWQgaW50IGZsYWdzKQogewogCXJldHVybiBOVUxMOwogfQotLSAKMi43LjQK
Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmlvbW11IG1h
aWxpbmcgbGlzdAppb21tdUBsaXN0cy5saW51eC1mb3VuZGF0aW9uLm9yZwpodHRwczovL2xpc3Rz
LmxpbnV4Zm91bmRhdGlvbi5vcmcvbWFpbG1hbi9saXN0aW5mby9pb21tdQ==
